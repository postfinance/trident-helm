name: Update Trident Manifests

on:
  push:
    paths:
      - "TRIDENT_VERSION"
    branches:
      - main
  pull_request:
    paths:
      - "TRIDENT_VERSION"
    branches:
      - main
  workflow_dispatch:
    inputs:
      trident_version:
        description: "Trident version to use (leave empty to use TRIDENT_VERSION file)"
        required: false
        type: string

jobs:
  update-manifests:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Kubernetes cluster (kind)
        uses: helm/kind-action@v1
        with:
          cluster_name: trident-test
          wait: 60s

      - name: Install tools
        run: |
          # Install yq
          sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

          # Install helm
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Determine Trident version
        id: version
        run: |
          if [ -n "${{ github.event.inputs.trident_version }}" ]; then
            TRIDENT_VERSION="${{ github.event.inputs.trident_version }}"
            echo "Using manual version: $TRIDENT_VERSION"
          else
            TRIDENT_VERSION=$(cat TRIDENT_VERSION)
            echo "Using version from file: $TRIDENT_VERSION"
          fi
          echo "version=$TRIDENT_VERSION" >> $GITHUB_OUTPUT

      - name: Download tridentctl
        run: |
          TRIDENT_VERSION="${{ steps.version.outputs.version }}"
          echo "::group::Downloading tridentctl v$TRIDENT_VERSION"

          # Download tridentctl
          wget -q "https://github.com/NetApp/trident/releases/download/v$TRIDENT_VERSION/trident-installer-$TRIDENT_VERSION.tar.gz"
          tar -xzf "trident-installer-$TRIDENT_VERSION.tar.gz"

          # Make tridentctl executable and move to PATH
          chmod +x "trident-installer/tridentctl"
          sudo mv "trident-installer/tridentctl" /usr/local/bin/

          # Verify installation
          tridentctl version --client
          echo "::endgroup::"

      - name: Run transform script
        working-directory: charts/trident-cli-helm
        run: |
          chmod +x transform.sh
          ./transform.sh

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "No changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected"
            echo "has_changes=true" >> $GITHUB_OUTPUT
            git diff --name-only
          fi

      - name: Create Pull Request
        if: steps.changes.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: |
            chore: update Trident manifests to v${{ steps.version.outputs.version }}

            🤖 Generated with [Claude Code](https://claude.ai/code)

            Co-Authored-By: Claude <noreply@anthropic.com>
          title: "chore: update Trident manifests to v${{ steps.version.outputs.version }}"
          body: |
            ## Summary
            - Updates Trident Helm chart templates to version `v${{ steps.version.outputs.version }}`
            - Regenerated from upstream `tridentctl` manifests
            - Includes latest CRDs, RBAC, and deployment configurations

            ## Changes
            - 🔄 Regenerated all templates from `tridentctl install --generate-custom-yaml`
            - 🎛️ Applied Helm templating for resource limits and tolerations
            - 📦 Updated CRDs to latest version

            ## Test plan
            - [ ] Verify Helm chart renders without errors: `helm template charts/trident-cli-helm`
            - [ ] Test installation on dev cluster
            - [ ] Validate resource templating works as expected

            ---
            🤖 This PR was automatically generated by the update-trident-manifests workflow.
          branch: update/trident-${{ steps.version.outputs.version }}
          delete-branch: true
          draft: false

      - name: Summary
        run: |
          if [ "${{ steps.changes.outputs.has_changes }}" == "true" ]; then
            echo "✅ Created PR for Trident v${{ steps.version.outputs.version }} updates"
          else
            echo "ℹ️ No changes needed - manifests are up to date"
          fi

